{"ast":null,"code":"var _jsxFileName = \"/Users/bartek/PhpstormProjects/Szpr_lab8/client/src/components/Main/index.jsx\",\n  _s = $RefreshSig$();\nimport styles from \"./styles.module.css\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport Users from \"../users\";\nimport AccountDetails from \"../accountDetails\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const [dane, ustawDane] = useState([]);\n  const [myUser, setUser] = useState(null);\n  const handleGetUsers = async e => {\n    e.preventDefault();\n    //pobierz token z localStorage:\n    const token = localStorage.getItem(\"token\");\n    //jeśli jest token w localStorage to:\n    if (token) {\n      try {\n        //konfiguracja zapytania asynchronicznego z tokenem w nagłówku:\n        const config = {\n          method: 'get',\n          url: 'http://localhost:8080/api/users',\n          headers: {\n            'Content-Type': 'application/json',\n            'x-access-token': token\n          }\n        };\n        //wysłanie żądania o dane:\n        const {\n          data: res\n        } = await axios(config);\n        //ustaw dane w komponencie za pomocą hooka useState na listę z danymi przesłanymi\n        //z serwera – jeśli został poprawnie zweryfikowany token\n        ustawDane(res.data); // `res.data` - zawiera sparsowane dane – listę\n        setUser(null);\n      } catch (error) {\n        if (error.response && error.response.status >= 400 && error.response.status <= 500) {\n          localStorage.removeItem(\"token\");\n          window.location.reload();\n        }\n      }\n    }\n  };\n  const handleGetAccountDetails = async e => {\n    e.preventDefault();\n    //pobierz token z localStorage:\n    const token = localStorage.getItem(\"token\");\n    //jeśli jest token w localStorage to:\n    if (token) {\n      try {\n        //konfiguracja zapytania asynchronicznego z tokenem w nagłówku:\n        const config = {\n          method: 'get',\n          url: 'http://localhost:8080/api/users/myUser',\n          headers: {\n            'Content-Type': 'application/json',\n            'x-access-token': token\n          }\n        };\n        //wysłanie żądania o dane:\n        const {\n          data: res\n        } = await axios(config);\n        //ustaw dane w komponencie za pomocą hooka useState na listę z danymi przesłanymi\n        //z serwera – jeśli został poprawnie zweryfikowany token\n        setUser(res.data); // `res.data` - zawiera sparsowane dane – listę\n        ustawDane([]);\n      } catch (error) {\n        if (error.response && error.response.status >= 400 && error.response.status <= 500) {\n          localStorage.removeItem(\"token\");\n          window.location.reload();\n        }\n      }\n    }\n  };\n  const handleDeleteUser = async () => {\n    //pobierz token z localStorage:\n    const token = localStorage.getItem(\"token\");\n    //jeśli jest token w localStorage to:\n    if (token) {\n      var windowChecked = window.confirm(\"Czy na pewno chcesz usunąć?\");\n      if (windowChecked) {\n        try {\n          //konfiguracja zapytania asynchronicznego z tokenem w nagłówku:\n          const config = {\n            method: 'get',\n            url: 'http://localhost:8080/api/users/delete',\n            headers: {\n              'Content-Type': 'application/json',\n              'x-access-token': token\n            }\n          };\n          await axios(config);\n          localStorage.removeItem(\"token\");\n          window.location.reload();\n        } catch (error) {\n          if (error.response && error.response.status >= 400 && error.response.status <= 500) {\n            localStorage.removeItem(\"token\");\n            window.location.reload();\n          }\n        }\n      }\n    }\n  };\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    window.location.reload();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.main_container,\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: styles.navbar,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"MySite\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.white_btn,\n        onClick: handleGetUsers,\n        children: \"U\\u017Cytkownicy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.white_btn,\n        onClick: handleGetAccountDetails,\n        children: \"Szczeg\\xF3\\u0142y konta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.white_btn,\n        onClick: handleDeleteUser,\n        children: \"Usu\\u0144 konto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.white_btn,\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), dane.length > 0 ? /*#__PURE__*/_jsxDEV(Users, {\n      users: dane\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 30\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 55\n    }, this), myUser != null ? /*#__PURE__*/_jsxDEV(AccountDetails, {\n      user: myUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 31\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 66\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n};\n_s(Main, \"Ihdz4B8g8QORMTv4FGXrpSLiTPE=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["styles","useState","axios","Users","AccountDetails","jsxDEV","_jsxDEV","Main","_s","dane","ustawDane","myUser","setUser","handleGetUsers","e","preventDefault","token","localStorage","getItem","config","method","url","headers","data","res","error","response","status","removeItem","window","location","reload","handleGetAccountDetails","handleDeleteUser","windowChecked","confirm","handleLogout","className","main_container","children","navbar","fileName","_jsxFileName","lineNumber","columnNumber","white_btn","onClick","length","users","user","_c","$RefreshReg$"],"sources":["/Users/bartek/PhpstormProjects/Szpr_lab8/client/src/components/Main/index.jsx"],"sourcesContent":["import styles from \"./styles.module.css\"\nimport {useState} from \"react\";\nimport axios from \"axios\";\nimport Users from \"../users\";\nimport AccountDetails from \"../accountDetails\";\n\nconst Main = () => {\n    const [dane, ustawDane] = useState([])\n    const [myUser, setUser] = useState(null)\n\n    const handleGetUsers = async (e) => {\n        e.preventDefault()\n        //pobierz token z localStorage:\n        const token = localStorage.getItem(\"token\")\n//jeśli jest token w localStorage to:\n        if (token) {\n            try {\n//konfiguracja zapytania asynchronicznego z tokenem w nagłówku:\n                const config = {\n                    method: 'get',\n                    url: 'http://localhost:8080/api/users',\n                    headers: {'Content-Type': 'application/json', 'x-access-token': token}\n                }\n//wysłanie żądania o dane:\n                const {data: res} = await axios(config)\n//ustaw dane w komponencie za pomocą hooka useState na listę z danymi przesłanymi\n//z serwera – jeśli został poprawnie zweryfikowany token\n                ustawDane(res.data) // `res.data` - zawiera sparsowane dane – listę\n                setUser(null)\n            } catch (error) {\n                if (error.response && error.response.status >= 400 && error.response.status <= 500) {\n                    localStorage.removeItem(\"token\")\n                    window.location.reload()\n                }\n            }\n        }\n    }\n\n    const handleGetAccountDetails = async (e) => {\n        e.preventDefault()\n        //pobierz token z localStorage:\n        const token = localStorage.getItem(\"token\")\n//jeśli jest token w localStorage to:\n        if (token) {\n            try {\n//konfiguracja zapytania asynchronicznego z tokenem w nagłówku:\n                const config = {\n                    method: 'get',\n                    url: 'http://localhost:8080/api/users/myUser',\n                    headers: {'Content-Type': 'application/json', 'x-access-token': token}\n                }\n//wysłanie żądania o dane:\n                const {data: res} = await axios(config)\n//ustaw dane w komponencie za pomocą hooka useState na listę z danymi przesłanymi\n//z serwera – jeśli został poprawnie zweryfikowany token\n                setUser(res.data) // `res.data` - zawiera sparsowane dane – listę\n                ustawDane([])\n            } catch (error) {\n                if (error.response && error.response.status >= 400 && error.response.status <= 500) {\n                    localStorage.removeItem(\"token\")\n                    window.location.reload()\n                }\n            }\n        }\n    }\n\n    const handleDeleteUser = async () => {\n        //pobierz token z localStorage:\n        const token = localStorage.getItem(\"token\")\n//jeśli jest token w localStorage to:\n        if (token) {\n            var windowChecked = window.confirm(\"Czy na pewno chcesz usunąć?\")\n            if (windowChecked) {\n                try {\n\n//konfiguracja zapytania asynchronicznego z tokenem w nagłówku:\n                    const config = {\n                        method: 'get',\n                        url: 'http://localhost:8080/api/users/delete',\n                        headers: {'Content-Type': 'application/json', 'x-access-token': token}\n                    }\n                    await axios(config)\n                    localStorage.removeItem(\"token\")\n                    window.location.reload()\n\n                } catch (error) {\n                    if (error.response && error.response.status >= 400 && error.response.status <= 500) {\n                        localStorage.removeItem(\"token\")\n                        window.location.reload()\n                    }\n                }\n            }\n        }\n    }\n\n\n    const handleLogout = () => {\n        localStorage.removeItem(\"token\")\n        window.location.reload()\n    }\n    return (\n        <div className={styles.main_container}>\n            <nav className={styles.navbar}>\n                <h1>MySite</h1>\n                <button className={styles.white_btn} onClick={handleGetUsers}>\n                    Użytkownicy\n                </button>\n                <button className={styles.white_btn} onClick={handleGetAccountDetails}>\n                    Szczegóły konta\n                </button>\n                <button className={styles.white_btn} onClick={handleDeleteUser}>\n                    Usuń konto\n                </button>\n                <button className={styles.white_btn} onClick={handleLogout}>\n                    Logout\n                </button>\n            </nav>\n            {dane.length>0 ? <Users users={dane} /> : <p></p>}\n            {myUser != null ? <AccountDetails user={myUser} /> : <p></p>}\n        </div>\n    )\n}\nexport default Main"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}